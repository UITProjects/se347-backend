name: PR CI for user-svc
on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'user-svc/src/main/**'
      - 'user-svc/compose.yaml'
      - 'user-svc/Dockerfile'
    branches:
      - dev
jobs:
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Placeholders
        run: echo "Will add unit tests later"
  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: user-svc
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1
      - name: Setup Jdk 17
        uses: actions/setup-java@v4.5.0
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache Maven packages
        uses: actions/cache@v4.1.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-v1
      - name: Resolve dependencies
        run: ./mvnw dependency:resolve-plugins dependency:resolve
      - name: Run integration tests
        run: ./mvnw verify
  build-and-push:
    name: Build and Push Docker image for pull request
    needs: [integration-test,unit-test]
#    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    runs-on: ubuntu-22.04
    steps:
      - name: set up buildx
        uses: docker/setup-buildx-action@v3.7.1
      - name: docker login credential
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GHCR_READ_WRITE_PACKPAGE}}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/ngodat0103/se347-backend/user-svc
      - name: Clone the repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1
      - name: build and push with specific tag
        uses: docker/build-push-action@v6.9.0
        with:
          context: user-svc
          push: true
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            SERVICE_NAME=user-svc
            SERVICE_PORT=5000
            VERSION=pr-${{steps.meta.outputs.tags}}