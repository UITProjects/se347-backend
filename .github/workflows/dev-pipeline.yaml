name: dev-pipeline
on:
  workflow_dispatch:
  pull_request:
    paths:
      - '.github/workflows/dev-pipeline.yaml'
      - 'user-svc/src/main/**'
      - 'user-svc/compose.yaml'
    branches:
      - dev
jobs:
  CI-UnitTest-IntegrationTest-SourceCodeAnalysis:
    name: CI-UnitTest-IntegrationTest-SourceCodeAnalysis
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: user-svc
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1
      - name: Setup Jdk 17
        uses: actions/setup-java@v4.5.0
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Cache Maven packages
        uses: actions/cache@v4.1.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-v1
      - name: Resolve dependencies
        run: ./mvnw -q dependency:resolve-plugins dependency:resolve
      - name: Run unit tests
        run: echo "placeholder, will be replaced by actual unit tests"
      - name: Run integration tests
        run: ./mvnw verify
#      - name: Add coverage to PR
#        id: jacoco
#        uses: madrapps/jacoco-report@v1.7.1
#        with:
#          paths: ${{github.workspace}}/target/site/jacoco/jacoco.xml
#          token: ${{ secrets.GITHUB_TOKEN }}
#          title: 'Code Coverage'
#          update-comment: true
#          min-coverage-overall: 40
#          min-coverage-changed-files: 60
      - name: Run Sonarqube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./mvnw sonar:sonar
  build-and-push:
    name: Build and Push Docker image for pull request
    needs: [CI-UnitTest-IntegrationTest-SourceCodeAnalysis ]
    #    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    outputs:
      TAG: ${{ steps.meta.outputs.version }}
    runs-on: ubuntu-22.04
    steps:
      - name: set up buildx
        uses: docker/setup-buildx-action@v3.7.1
      - name: docker login credential
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GHCR_READ_WRITE_PACKAGES_TOKEN}}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/ngodat0103/se347-backend/user-svc
      - name: Clone the repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1
      - name: build and push with specific tag
        uses: docker/build-push-action@v6.9.0
        with:
          context: user-svc
          push: true
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            SERVICE_NAME=usersvc
            SERVICE_PORT=5000
            VERSION=pr-${{github.sha}}
  deploy:
    name: Deploy to dev environment
    environment: dev
    runs-on: dev-docker
    defaults:
      run:
        working-directory: user-svc
    needs: build-and-push
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 1
      - name: Update dev image tag
        working-directory: user-svc
        run: echo "TAG=${{needs.build-and-push.outputs.TAG}}" > .env
      - name: Pull new Docker image version
        run: sudo docker compose --profile all pull
      - name: Fetch secrets from Vault
        uses: hashicorp/vault-action@v3.0.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            secrets/data/se347/backend/dev/user-svc mongodb-root-password
            secrets/data/se347/backend/dev/user-svc mongodb-passwords
      - name: Set up credentials
        run: |
          echo "MONGODB_PASSWORD=${{ env.mongodb-passwords }}" >> .env
          echo "MONGODB_ROOT_PASSWORD=${{ env.mongodb-root-password }}" >> .env
      - name: Deploy new Docker image
        working-directory: user-svc
        run: sudo docker compose --profile all up -d